#!/bin/sh

##################
# created 2017-12-27
# by Thomas Frohwein (thfr)
#################
# Script to get FNA-based games
# ready to run on OpenBSD
##################
# Requirements:
#
# - SDL2 library that identifies as 'Linux' rather than 'OpenBSD'
#   (needs to be compiled this way; patch to recognize OpenBSD in
#   progress upstream)
# - mono (package in ports marked as BROKEN, but compiles on amd64
#   if /usr/ports is mounted with wxallowed)
##################
# Usage:
#
# fnaify <launch script>
#
##########

# check if file in $1 exists, if not throw error
if [ ! -e "$1" ]
then
	print "file not found"
	exit 1
fi

# FIXME: check that $1 is shell script, e.g. with 'file' command

# variable definitions
fullfnaifypath="$0"
fnaifyfile="`basename $fullfnaifypath`"
fnaifydir="`dirname $fullfnaifypath`"
fullscriptpath="`pwd`/$1"
scriptfile="`basename $fullscriptpath`"
gamedir="`dirname $fullscriptpath`"
# FIXME: add test that there is only one .exe file, otherwise error out
fullexepath="`ls $gamedir/*.exe`"	# should be only one .exe file from my observation; if not will likely bug out
exefile="`basename $fullexepath`"

####
# 1. replace all occurences of 'linux' in .config files (dllmap) with 'openbsd'
#    (this won't be needed after patched fna rolled out)

# create backup .linux files of the original .config files
for file in `ls *.config`
do
	if [ ! -e "$file.linux" ]
	then
		cp -p "$file" "$file.linux"
	fi
done

# now sed replace all terms in *.config
# FIXME: code so that repeatedly using fnaify doesn't mess up library names, e.g. by including character after last library filename
for file in `ls *.config`
do
	# someone may be able to provide a more compact solution for this section
	# FIXME: make this section independent from installed library version
	#        e.g. by using ls | grep "..." to find library based on filename pattern
	# ? find and add minimum versions of libraries?
	sed -i 's/os="linux"/os="openbsd"/g' "$file"
	sed -i 's/target="libSDL2-2.0.so.0"/target="libSDL2.so.0.3"/g' "$file"
	sed -i 's/target="libSDL2_image-2.0.so.0"/target="libSDL2_image.so.0.0"/g' "$file"
	sed -i 's/target="libSDL2_mixer-2.0.so.0"/target="libSDL2_mixer.so.0.0"/g' "$file"
	sed -i 's/target="libSDL2_ttf-2.0.so.0"/target="libSDL2_ttf.so.0.0"/g' "$file"
	sed -i 's/target="libopenal.so.1"/target="libopenal.so.3.0"/g' "$file"
	sed -i 's/target="libvorbisfile.so.3"/target="libvorbisfile.so.6.0"/g' "$file"
	# libmojoshader.so should be the same name between linux and openbsd at this point
	# libtheoraplay.so should be the same name
	# FIXME: libtheoraplay.so -> unclear what to replace it with
	# FIXME: libtheorafile.so -> unclear what to replace it with
	sed -i 's/dll="libfreetype.so.6"/dll="libfreetype.so.28.2"/g' "$file"
	sed -i 's/target=".\/lib64\/libSDL2-2.0.so.0"/target="libSDL2.so.0.3"/g' "$file"	# Stardew Valley - may not be needed if taking non-Linux version
	sed -i 's/target=".\/lib64\/libopenal.so.1"/target="libopenal.so.3.0"/g' "$file"	# Stardew Valley - may not be needed if taking non-Linux version
done

####
# 3. drop openbsd library package in lib and lib64 folders with names changed to linux equivalents
#
#    the library package contains
#			->	libSDL2-2.0.so.0
#			->	libSDL2_mixer-2.0.so.0
#			->	libmono-2.0.so.1
#			->	libogg.so.0
#			->	libopenal.so.1
#			->	libmojoshader.so... (not available in OpenBSD packages)
#			->	libtheora.so.0
#			->	libtheoradec.so.1
#			->	libtheoraplay.so (no libtheoraplay in OpenBSD - is this integrated in libtheora or libtheoradec?)
#			->	libvorbis.so.0
#			->	libvorbisfile.so.3
#			->	libMonoPosixHelper.so
#			->	libXNAFileDialog.so (from github)
#			->	libcef.so (from github flibitijibibo/XNAWebRenderer)
#	-- UNLESS this script will just use system libraries

###
# 4. copy wrapper script template into the game folder, set correct .exe in script, and set to executable
#
#    FIXME: set generic way to pass arguments to .exe? 
#    FIXME: Hacknet needs -disableweb flag

# if not exists, make backup of original script for linux
if [ ! -e "$fullscriptpath.linux" ]
then
	cp -p "$fullscriptpath" "$fullscriptpath.linux"
fi
cp "$fnaifydir/wrapper.template" $fullscriptpath
# FIXME: "$exefile" is not replaced by variable, will try without ""
sed -i "s/<WINDOWS_EXECUTABLE>/\"$exefile\"/g" "$fullscriptpath"
chmod +x "$fullscriptpath"
